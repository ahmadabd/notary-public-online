// Code generated by MockGen. DO NOT EDIT.
// Source: notary-public-online/internal/pkg/pairKey (interfaces: Keys)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKeys is a mock of Keys interface.
type MockKeys struct {
	ctrl     *gomock.Controller
	recorder *MockKeysMockRecorder
}

// MockKeysMockRecorder is the mock recorder for MockKeys.
type MockKeysMockRecorder struct {
	mock *MockKeys
}

// NewMockKeys creates a new mock instance.
func NewMockKeys(ctrl *gomock.Controller) *MockKeys {
	mock := &MockKeys{ctrl: ctrl}
	mock.recorder = &MockKeysMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeys) EXPECT() *MockKeysMockRecorder {
	return m.recorder
}

// PairKeyGenerator mocks base method.
func (m *MockKeys) PairKeyGenerator() (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PairKeyGenerator")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// PairKeyGenerator indicates an expected call of PairKeyGenerator.
func (mr *MockKeysMockRecorder) PairKeyGenerator() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PairKeyGenerator", reflect.TypeOf((*MockKeys)(nil).PairKeyGenerator))
}
